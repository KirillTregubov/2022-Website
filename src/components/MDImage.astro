---
import { Image } from 'astro:assets'

interface Props {
  id?: string
  src: string
  alt?: string
  width: number
  height: number
  className?: string
  hasDetails?: boolean
  title?: string
  description?: string
  keywords?: string
  link?: string
  loading?: 'eager' | 'lazy'
  draggable?: 'true' | 'false'
}

const {
  id,
  alt,
  className,
  hasDetails,
  title,
  description,
  keywords,
  link,
  ...props
} = Astro.props

const imgAlt = alt || title || 'Placeholder image'
---

<figure data-item>
  <figure class="relative w-fit">
    <Image
      {...props}
      alt={imgAlt}
      class:list={['relative select-none', className]}
      onerror="this.src='/assets/projects/placeholder.jpg'; this.onerror=null"
      draggable="false"
    />
    {hasDetails && <slot />}
  </figure>
  {
    !!title && title.length > 0 && (
      <figcaption
        class:list={[
          'text-center',
          !!description && 'mt-3 text-lg font-semibold leading-none'
        ]}
        data-title
      >
        {title}
      </figcaption>
    )
  }
  {
    !!description && description.length > 0 && (
      <div class="mb-1 mt-2 text-center leading-none text-neutral-400">
        <p class="inline-block" data-description>
          {description}
        </p>
        {link && URL.canParse(link) && (
          <a
            href={link}
            rel="noopener"
            target="_blank"
            class="-m-0.5 p-0.5 !ring-white transition-[color,box-shadow] hover:text-white focus-visible:text-white active:text-white"
          >
            (<span class="underline">Link</span>)
          </a>
        )}
      </div>
    )
  }
  {
    !!keywords && keywords.length > 0 && (
      <p class="hidden" data-keywords>
        {keywords}
      </p>
    )
  }
</figure>
